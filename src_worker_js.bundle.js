/*! For license information please see src_worker_js.bundle.js.LICENSE.txt */
(()=>{var __webpack_modules__={"./src/worker.js":()=>{eval("const versionOfAPI = \"v3.1\"\r\nconst endpointOfAPI = `https://restcountries.com/${versionOfAPI}/all`;\r\n\r\nasync function fetchCountryData() {\r\n    try {\r\n        let responseArr = [];\r\n        const response = await fetch(`${endpointOfAPI}`);\r\n\r\n        if (response.ok) {\r\n            responseArr = await response.json();\r\n            const shuffledData = shuffleCountryData(responseArr);\r\n            postMessage(shuffledData);\r\n        } else {\r\n            response.status >= 500\r\n                && postMessage({ error: 'ServerError' });\r\n            (response.status >= 400 && response.status < 500)\r\n                && postMessage({ error: 'ClientError' });\r\n\r\n            console.log(`Error: code ${response.status}`);\r\n        }\r\n\r\n    } catch (error) {\r\n        if (error instanceof TypeError) {\r\n            postMessage({ error: 'TypeError' });\r\n            console.error('Error:', error.name, '-> Check the fetch URL or API version');\r\n        } else {\r\n            postMessage({ error: 'Misc' });\r\n            console.error(error);\r\n        }\r\n    }\r\n}\r\n\r\n//algoritmo de ordernação aleatória fisher-yates \r\nfunction shuffleCountryData(arr) {\r\n    for (let i = arr.length - 1; i > 0; i--) {\r\n        const j = Math.floor(Math.random() * (i + 1));\r\n        [arr[i], arr[j]] = [arr[j], arr[i]];\r\n    }\r\n\r\n    return arr;\r\n}\r\n\r\naddEventListener('message', () => {\r\n    fetchCountryData();\r\n})\n\n//# sourceURL=webpack:///./src/worker.js?")}},__webpack_exports__={};__webpack_modules__["./src/worker.js"]()})();